#!/bin/bash
# batchProcessing-0x04
# Parallel fetching of Pokémon data with process management (jobs, kill, wait)

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE="https://pokeapi.co/api/v2/pokemon"
OUTPUT_DIR="pokemon_data_parallel"
ERROR_LOG="errors_parallel.txt"

mkdir -p "$OUTPUT_DIR"
: > "$ERROR_LOG"  # Clear error log

fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."
    if curl -s -f "$API_BASE/$pokemon" -o "$OUTPUT_DIR/$pokemon.json"; then
        echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
    else
        echo "[$(date)] Failed to fetch data for $pokemon ❌" >> "$ERROR_LOG"
    fi
}

# Launch all in background
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Show running jobs for monitoring
jobs

# Wait for all background jobs and clean up failed ones
for job in $(jobs -p); do
    if ! wait "$job"; then
        echo "Job $job failed. Killing..."
        kill "$job" 2>/dev/null
    fi
done

echo "All downloads completed!"
