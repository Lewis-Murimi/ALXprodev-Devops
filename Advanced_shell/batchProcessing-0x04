#!/bin/bash
# batchProcessing-0x04
# Parallel fetching with proper process handling and cleanup

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE="https://pokeapi.co/api/v2/pokemon"
OUTPUT_DIR="pokemon_data_parallel"
ERROR_LOG="errors_parallel.txt"

mkdir -p "$OUTPUT_DIR"
: > "$ERROR_LOG"  # Clear previous log

pids=()  # To store background process IDs

fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."
    if curl -s -f "$API_BASE/$pokemon" -o "$OUTPUT_DIR/$pokemon.json"; then
        echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
    else
        echo "[$(date)] Failed to fetch data for $pokemon ❌" >> "$ERROR_LOG"
    fi
}

# Launch fetches in parallel and record their PIDs
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!)
done

# Wait for all processes, kill if needed
for pid in "${pids[@]}"; do
    if ! wait "$pid"; then
        echo "Process $pid failed. Killing..."
        kill "$pid" 2>/dev/null
    fi
done

echo "All downloads completed!"
